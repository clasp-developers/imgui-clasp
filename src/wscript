
def configure(cfg):
    cfg.extensions_startup_loads.append("imgui-startup.lisp")
    pass

imgui_files = [ "imgui.cc"
                ]
                
def build(bld):
    print("Imgui build bld.path = %s" % bld.path)
    for file in imgui_files:
        node = bld.path.find_node(file)
        if (node == None):
            print("Could not find %s" % file)
        bld.extensions_source_files.append(node)
    print("bld.extensions_source_files -> %s" % bld.extensions_source_files)
    start_dir = bld.path
    bld.install_files('${PREFIX}/lib/clasp/extensions/imgui-clasp/src/',
        start_dir.ant_glob('**/*.lisp'),
        cwd=start_dir, relative_trick=True)
    bld.install_files('${PREFIX}/lib/clasp/extensions/imgui-clasp/src/',
        start_dir.ant_glob('**/*.asd'),
        cwd=start_dir, relative_trick=True)
    bld.install_files('${PREFIX}/lib/clasp/extensions/imgui-clasp/src/',
        start_dir.ant_glob('**/*.cc'),
        cwd=start_dir, relative_trick=True)
    src = bld.path.find_node("imgui-startup.lisp")
    dest = bld.path.get_bld().parent.parent.parent.make_node('extension-startup-loads/imgui-startup.lisp')
    bld.extensions_startup_load_output_nodes.append(dest)
    print("About to add imgui-startup.lisp to %s" % dest.abspath())
    bld(source=src, target=dest, rule='cp ${SRC} ${TGT}')
    bld.install_as('${PREFIX}/bin/extension-startup-loads/imgui-startup.lisp', 'imgui-startup.lisp')

